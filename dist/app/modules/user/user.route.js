"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRoutes = void 0;
const express_1 = __importDefault(require("express"));
const user_controller_1 = require("./user.controller");
const validateRequest_1 = require("../../middlewares/validateRequest");
const user_validation_1 = require("./user.validation");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const client_1 = require("@prisma/client");
const router = express_1.default.Router();
router.post("/register", (0, validateRequest_1.validateRequest)(user_validation_1.registerUserZodSchema), user_controller_1.UserController.registerUser);
router.post("/login", (0, validateRequest_1.validateRequest)(user_validation_1.registerUserZodSchema), user_controller_1.UserController.loginUser);
router.post("/refreshToken", user_controller_1.UserController.refreshToken);
router.get("/", (0, auth_1.default)(client_1.UserRole.ADMIN), user_controller_1.UserController.getAllUser);
router.patch("/update-role/:id", (0, validateRequest_1.validateRequest)(user_validation_1.roleZodSchema), (0, auth_1.default)(client_1.UserRole.ADMIN), user_controller_1.UserController.roleUpdate);
router.patch("/update-status/:id", (0, validateRequest_1.validateRequest)(user_validation_1.statusZodSchema), (0, auth_1.default)(client_1.UserRole.ADMIN), user_controller_1.UserController.statusUpdate);
exports.UserRoutes = router;
