// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum BloodGroup {
  A_POS 
  A_NEG 
  B_POS 
  B_NEG 
  AB_POS
  AB_NEG
  O_POS 
  O_NEG 
}


model User {
  id String @id @default(uuid())
  phone String @unique
  password String
  role UserRole @default(USER)
  isDonor Boolean @default(false)
  isBlocked Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donor Donor?
  blood_donation Blood_Donation[]
  gallery Gallery[]

  @@map("users")
}

model Donor {
  id String @id @default(uuid())
  user_id String @unique
  name String
  address String
  contact_number String
  division String
  district String
  sub_district String
  blood_group BloodGroup
  last_donation_date DateTime?
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  disabledBy UserRole?

  user User @relation(fields: [user_id], references: [id])

  @@map("donors")
}

model Blood_Donation {
  id String @id @default(uuid())
  user_id String
  title String
  donation_date DateTime
  note String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@map("blood_donations")
}

model Blog {
  id String @id @default(uuid())
  title String
  image String
  details String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blogs")
}

model Gallery {
  id String @id @default(uuid())
  user_id String
  name String
  image String
  isPublished Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])
}

model Testimonial {
  id String @id @default(uuid())
  name String
  address String
  message String
  isPublished Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("testimonials")
}